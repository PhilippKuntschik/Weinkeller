name: Package and Publish Helm Chart

on:
  push:
    branches: [ main ]
    paths:
      - 'helm/**'
  release:
    types: [ published ]

jobs:
  package-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Set chart version from release
        if: github.event_name == 'release'
        run: |
          # Extract version from release tag (remove 'v' prefix if present)
          RELEASE_VERSION="${{ github.event.release.tag_name }}"
          CHART_VERSION="${RELEASE_VERSION#v}"
          
          # Update Chart.yaml with the new version
          sed -i "s/^version:.*/version: ${CHART_VERSION}/" helm/weinkeller/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${CHART_VERSION}\"/" helm/weinkeller/Chart.yaml
          
          echo "Updated chart version to ${CHART_VERSION}"
      
      - name: Package Helm chart
        run: |
          mkdir -p .cr-release-packages
          helm package helm/weinkeller --destination .cr-release-packages
      
      - name: Upload Helm chart as release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .cr-release-packages/weinkeller-${{ github.event.release.tag_name }}.tgz
          asset_name: weinkeller-${{ github.event.release.tag_name }}.tgz
          asset_content_type: application/x-gzip
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Helm chart to GitHub Container Registry
        run: |
          # Install Helm chart releaser
          curl -L https://github.com/helm/chart-releaser/releases/download/v1.6.0/chart-releaser_1.6.0_linux_amd64.tar.gz | tar xzf -
          
          # Push chart to GHCR
          CHART_PACKAGE=$(ls .cr-release-packages/weinkeller-*.tgz)
          CHART_NAME=$(basename $CHART_PACKAGE)
          
          echo "Pushing chart: $CHART_NAME"
          
          # Convert GitHub repository name to lowercase
          REPO_OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          # Push to GHCR using Helm OCI support
          helm push $CHART_PACKAGE oci://ghcr.io/$REPO_OWNER_LC/charts
          
          echo "Chart pushed to ghcr.io/$REPO_OWNER_LC/charts"
